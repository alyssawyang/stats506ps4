---
title: "Stats 506 PS4"
author: "Alyssa Yang"
format: 
  pdf:
    code-fold: true
---

**GitHub repo link**: https://github.com/alyssawyang/stats506ps4

# Problem 1: Tidyverse
```{r}
library(nycflights13)
suppressMessages(library(dplyr))
library(tidyr)
library(stringr)
library(ggplot2)

# View(flights)
# View(planes)
```


## 1a
```{r}
# Departure delays
flights %>%
  group_by(origin) %>% 
  summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE),
            median_dep_delay = median(dep_delay, na.rm = TRUE),
            num_flights = n()) %>% 
  ungroup() %>% 
  filter(num_flights >= 10) %>% 
  rename(faa = origin) %>% 
  left_join(airports, by = "faa") %>%
  arrange(desc(mean_dep_delay)) %>% 
  select(name, mean_dep_delay, median_dep_delay) 
```

```{r}
# Arrival delays
flights %>%
  group_by(dest) %>% 
  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE),
            median_arr_delay = median(arr_delay, na.rm = TRUE),
            num_flights = n()) %>% 
  ungroup() %>% 
  filter(num_flights >= 10) %>% 
  rename(faa = dest) %>% 
  left_join(airports, by = "faa") %>%
  mutate(name = coalesce(name, faa)) %>%
  arrange(desc(mean_arr_delay)) %>% 
  select(name, mean_arr_delay, median_arr_delay) %>% 
  print(n = count(.))
```


## 1b
```{r}
# Find number of flights the aircraft model with the fastest average speed has
flights %>% 
  left_join(planes, by = "tailnum") %>% 
  mutate(mph = distance / (air_time / 60)) %>% 
  group_by(model) %>% 
  summarize(avg_mph = mean(mph),
            num_flights = n()) %>% 
  ungroup() %>%
  arrange(desc(avg_mph)) %>% 
  slice(1)
```


# Problem 2: get_temp()
```{r}
# Load in Chicago NNMAPS data 
nnmaps <- read.csv("chicago-nmmaps.csv")
# View(nnmaps)
```

```{r}
#| code-fold: false
#' Function that finds average monthly temperature
#'
#' @param month Month, either a numeric 1-12 or a string
#' @param year A numeric year
#' @param data The data set to obtain data from
#' @param celsius Logically indicating whether the results should be in celsius. 
#'        Default is FALSE
#' @param average_fn A function with which to compute the mean. Default is mean
#'
#' @return Average temperature as a numeric vector of length 1 
get_temp <- function(month, year, data, celsius = FALSE, average_fn = mean) {
  # Check if month is a valid month
  if (month %>% is.numeric) {
    if (month < 1 | month > 12) {
      warning("Month is not valid")
      return(NA)
    }
  }
  else if (month %>% is.character) {
    months <- c("January", "February", "March", "April", "May", "June", "July",
                "August", "September", "October", "November", "December")
    month <- month %>% match.arg(months)
    month <- month %>% match(months)
  }
  else {
    warning("Month must be a valid numeric or character")
    return(NA)
  }
  
  # Check if year is a valid year
  if (!(year %>% is.numeric)) {
    warning("Year must be numeric")
    return(NA)
  }
  if (year < 1997 | year > 2000) {
    warning("Year is not valid")
    return(NA)
  }
  
  # Check if function is a valid function
   if (!(average_fn %>% is.function)) {
    warning("Average_fn must be a function")
     return(NA)
   }
  
  # If celsius is true, convert from F to C
  if (celsius == TRUE) {
    data <- data %>% 
      mutate(temp = (temp - 32) * (5/9))
  }

  # Find and return average monthly temperature
  avg <- data %>% 
    select(year, month_numeric, temp) %>% 
    rename(year_data = year) %>% 
    filter(year_data == year,
           month_numeric == month) %>% 
    summarize(average_fn(temp))
    
  return(avg)
}
```

```{r}
#| code-fold: false
# Evaluate code
get_temp("Apr", 1999, data = nnmaps)
get_temp("Apr", 1999, data = nnmaps, celsius = TRUE)
get_temp(10, 1998, data = nnmaps, average_fn = median)
get_temp(13, 1998, data = nnmaps)
get_temp(2, 2005, data = nnmaps)
get_temp("November", 1999, data =nnmaps, celsius = TRUE,
         average_fn = function(x) {
           x %>% sort -> x
           x[2:(length(x) - 1)] %>% mean %>% return
         })
```


# Problem 3: Visualization
```{r}
# Read in art sales dataset
art_sales <- read.csv("df_for_ml_improved_new_market.csv")

# View(art_sales)
```


## 3a: Is there a change in the sales price in USD over time?
```{r}
# Look at summary to help determine axis bounds for sales prices
summary(art_sales$price_usd)
```

```{r}
# Plot sales price over the years
ggplot(art_sales, aes(x = year, y = price_usd)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", color = "blue", fill = "lightblue") +
  labs(title = "Sales Price (USD) Over Time",
       x = "Year",
       y = "Sales Price in USD") +
  ylim(0, 100000)
```
From the graph, we can see that there has been a change in Sales Price (USD) over time which may be due to factors such as a growing demand in the market or other broader economic factors. The range of sales prices has increased over time with more art pieces being a lot more expensive than in earlier years. I added a LOESS smoothing line in order to capture the overall trend of sales prices, and we can see that the prices gradually increased until around 2008 when it started slightly falling again. 

I chose to include only sales prices from \$0 to \$100,000 in order to better visualize the trend - by excluding some very high-priced outliers, this range helps to highlight the general patterns of sales prices more.


## 3b: Does the distribution of genre of sales across years appear to change?
```{r}
# Collapse genre columns into one column
art_sales_genres <- art_sales %>%
  pivot_longer(cols = starts_with("Genre___"),
               names_to = "genre",
               values_to = "count") 

# Rename genre values and select relevant columns
art_sales_genres <- art_sales_genres %>%
  mutate(genre = str_remove(genre, "Genre___")) %>% 
  filter(count > 0) %>% 
  select(year, genre)

# Calculate proportions of genre of sales across years
genre_dist <- art_sales_genres %>%
  group_by(year, genre) %>%
  summarize(num_sales = n()) %>%
  mutate(proportion = num_sales / sum(num_sales))

# Plot genre distribution across years
ggplot(genre_dist, aes(x = year, y = proportion, fill = genre)) +
  geom_area(alpha = 0.75, size = 0.5, color = "white") +
  labs(title = "Distribution of Genre of Sales Across Years", 
       x = "Year", 
       y = "Proportion of Sales")

```
From the graph, we can see that the distribution of genre of sales did change quite a bit from 1997 to 2004, but after 2004, the distribution has stayed relatively constant. People only started selling prints in 2000, and sculpture and photography gained popularity whereas painting and others decreased in popularity until around 2004. After 2004, photography and sculpture remain the most popular genre of art sales, and print, painting, and others are not as popular.


## 3c: How does the genre affect the change in sales price over time?
```{r}
# Collapse genre columns into one column
art_sales_genres <- art_sales %>%
  pivot_longer(cols = starts_with("Genre___"),
               names_to = "genre",
               values_to = "count") 

# Rename genre values and select relevant columns
art_sales_genres <- art_sales_genres %>%
  mutate(genre = str_remove(genre, "Genre___")) %>% 
  filter(count > 0) %>% 
  select(year, genre, price_usd)

# Calculate average sales price by year and genre
avg_price_genre <- art_sales_genres %>%
  group_by(year, genre) %>%
  summarize(avg_sales_price = mean(price_usd, na.rm = TRUE))

# Plot price change over time by genre
ggplot(avg_price_genre, aes(x = year, y = avg_sales_price, color = genre)) +
  geom_line(size = 1) +
  labs(title = "Change in Sales Price Over Time by Genre",
       x = "Year",
       y = "Average Sales Price in USD")
```
From the graph, we can see that over time, different genres have had different average sales prices. We can see that the average sales price for painting and others genres have stayed almost identical to each other across the years with sculpture following a similar trend. However, with sculpture, it didn't have as high of a peak of average salary as the other genres in 2008 and has consistently remained quite low. Since it's arrival in 2000, prints' average sales prices have fluctuated drastically, sometimes being the highest average sales price genre and sometimes being the lowest. Photography started out having a similar average sales price as painting, others, and sculpture, but has since increased drastically from around 2004. Since around 2005, it has had the highest average sales price compared to all other genres by a significant margin, and since 2010, all other genres have had around the same average sales price.




















